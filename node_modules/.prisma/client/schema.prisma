// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  totalExp     Int
  refreshToken String?  @map("refresh_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  answer   Answer[]
  dailyexp DailyExp[]
  report   Report[]

  @@map("user")
}

//daily ai답변 한번에

model Answer {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  replies   String[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  report Report[]

  user User @relation(fields: [userId], references: [id])

  @@map("answer")
}

//경험치
model DailyExp {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  exp       Int
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@map("daily_exp")
}

model Report {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  answerId   Int      @map("answer_id")
  aiFeedBack String   @map("ai_feedback")
  createdAt  DateTime @default(now()) @map("created_at")
  user       User     @relation(fields: [userId], references: [id])
  answer     Answer   @relation(fields: [answerId], references: [id])

  @@map("report")
}
